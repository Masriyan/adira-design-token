name: Auto Convert and Version Update

on: pull_request

jobs:
  run_if: # only if base branch is "figma-tokens"
    if: ${{ github.head_ref == 'figma-tokens' }}
    name: Process Figma Tokens
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: running flow
        run: |
          echo "flow running"

# on:
#   workflow_run:
#     workflows:
#       ['Create Figma Tokens Pull Request (automatic create pull request)']
#     types:
#       - completed

# jobs:
#   convert-sd:
#     runs-on: ubuntu-latest
#     timeout-minutes: 5
#     steps:
#       - name: Install Dependencies
#         run: npm install

#       - name: Run token-transformer
#         run: npx token-transformer sd-input/src/figma-tokens-output.json sd-input/src/sd-input.json global,colors,size,font global --resolveReferences true --expandTypography=true

#       - name: Run style-dictionary
#         run: npx style-dictionary build --config sd.config.cjs

#       - name: Commit changes
#         run: |
#           git config --local user.email "senno.adi2509@gmail.com"
#           git config --local user.name "senno adi"
#           git add .
#           git commit -m "chore: style-dictionary output"
#           git push origin main

#   - name: Create Pull Request
#     uses: peter-evans/create-pull-request@v3
#     with:
#       token: ${{ secrets.GITHUB_TOKEN }}
#       branch: main
#       title: 'chore: style-dictionary output'
#       body: 'Automated PR to update style-dictionary output'

#   - name: Commit changes
#     uses: EndBug/add-and-commit@v9
#     with:
#       author_name: senno adi
#       author_email: senno.adi2509@@gmail.com
#       message: 'chore: style-dictionary output'
#       add: '.'

#   create-tag:
#     needs: convert-sd
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set Up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '14' # Ganti dengan versi Node.js yang sesuai

#       - name: Install jq
#         run: sudo apt-get install jq

#       - name: Auto-increment Version Tag on Merge
#         run: |
#           # Mendapatkan versi saat ini dari package.json
#           current_version=$(jq -r .version package.json)
#           echo "current version : $current_version"

#           # Cek apakah versi ada atau tidak
#           if [[ "$current_version" == "null" || -z "$current_version" ]]; then
#             echo "Tidak dapat menemukan versi dalam package.json."
#             exit 1
#           fi

#           # Memisahkan versi menjadi array berdasarkan tanda titik (.)
#           IFS='.' read -ra version_parts <<< "$current_version"

#           # Menambahkan 1 ke bagian terakhir (angka revisi) dari versi
#           new_revision=$((version_parts[2] + 1))

#           # Membuat versi yang baru dengan menggabungkan kembali array
#           new_version="${version_parts[0]}.${version_parts[1]}.$new_revision"
#           echo "new version : $new_version"

#           # Memperbarui versi dalam package.json
#           jq ".version = \"$new_version\"" package.json > package.json.tmp
#           mv package.json.tmp package.json

#           # Melakukan git pull terlebih dahulu untuk mengambil perubahan terbaru dari remote 'main'
#           git pull origin main

#           # Menghapus tag yang sudah ada di remote jika ada
#           # git push --delete origin "v$new_version" || true

#           # Commit perubahan dan push ke branch main
#           git config user.name "GitHub Actions"
#           git config user.email "actions@github.com"
#           git add package.json
#           git commit -m "Auto-increment version to $new_version"
#           git push origin main

#           # Membuat tag baru dengan versi yang baru
#           git tag -a "v$new_version" -m "Versi $new_version"
#           git push origin "v$new_version"
